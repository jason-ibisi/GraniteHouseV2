@model GraniteHouseV2_Models.ViewModels.ProductUserVM
@{
    ViewData["Title"] = "Shopping Cart Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="post" id="payment-form">
    <br />
    <div class="backgroundWhiteBorder">
        <div class="container">
            <div class="card">
                <div class="card-header bg-dark text-light mx-0 row container">
                    <div class="col-6">
                        <i class="fa fa-shopping-cart"></i> &nbsp;
                        Order Summary
                    </div>
                    <div class="col-6 text-end">
                        <a asp-action="Index" class="btn btn-outline-info btn-sm">Back to Cart</a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="container rounded p-2">
                        <div class="row">
                            <div class="col-12 col-lg-7 pb-4">
                                <div class="row">
                                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-info">User Details:</span>
                                    </h4>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">
                                        <label>Name</label>
                                    </div>
                                    <div class="col-9">
                                        <input asp-for="@Model.ApplicationUser.FullName" required type="text" class="form-control" />
                                        <span asp-validation-for="@Model.ApplicationUser.FullName" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">
                                        <label>Phone</label>
                                    </div>
                                    <div class="col-9">
                                        <input asp-for="@Model.ApplicationUser.PhoneNumber" required type="text" class="form-control" />
                                        <span asp-validation-for="@Model.ApplicationUser.PhoneNumber" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row my-1">
                                    <div class="col-3">
                                        <label>Email</label>
                                    </div>
                                    <div class="col-9">
                                        <input asp-for="@Model.ApplicationUser.Email" required type="text" class="form-control" />
                                        <span asp-validation-for="@Model.ApplicationUser.Email" class="text-danger"></span>
                                    </div>
                                </div>
                                @if (User.IsInRole(GraniteHouseV2_Utility.AppConstants.AdminRole))
                                {
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Street</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="@Model.ApplicationUser.Street" type="text" class="form-control" />
                                            <span asp-validation-for="@Model.ApplicationUser.Street" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>City</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="@Model.ApplicationUser.City" type="text" class="form-control" />
                                            <span asp-validation-for="@Model.ApplicationUser.City" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>State</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="@Model.ApplicationUser.State" type="text" class="form-control" />
                                            <span asp-validation-for="@Model.ApplicationUser.State" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="row my-1">
                                        <div class="col-3">
                                            <label>Postal Code</label>
                                        </div>
                                        <div class="col-9">
                                            <input asp-for="@Model.ApplicationUser.PostalCode" type="text" class="form-control" />
                                            <span asp-validation-for="@Model.ApplicationUser.PostalCode" class="text-danger"></span>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="col-12 col-lg-5 row">
                                <div class="col-12">
                                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                                        <span class="text-info">Order Summary:</span>
                                    </h4>
                                    <ul class="list-group mb-3">
                                        @{ var orderTotal = 0.0; }
                                        @for (int i = 0; i < Model.ProductList.Count(); i++)
                                        {
                                            <input type="hidden" asp-for="@Model.ProductList[i].ProductId" />
                                            <input type="hidden" asp-for="@Model.ProductList[i].Name" />
                                            <input type="hidden" asp-for="@Model.ProductList[i].Price" />
                                            <input type="hidden" asp-for="@Model.ProductList[i].TempSqFt" />
                                            <li class="list-group-item d-flex justify-content-between">
                                                <div>
                                                    <h6 class="my-0">@Model.ProductList[i].Name</h6>
                                                    @if (User.IsInRole(GraniteHouseV2_Utility.AppConstants.AdminRole))
                                                    {
                                                        <small class="text-muted">Sqft: @Model.ProductList[i].TempSqFt</small>
                                                        <small> | </small>
                                                    }
                                                    <small class="text-muted">Price per Sqft: $@Model.ProductList[i].Price</small>
                                                </div>
                                                @if (User.IsInRole(GraniteHouseV2_Utility.AppConstants.AdminRole))
                                                {
                                                    <span class="text-muted">$@(Model.ProductList[i].Price * Model.ProductList[i].TempSqFt)</span>
                                                }
                                            </li>
                                            orderTotal += @Model.ProductList[i].Price * @Model.ProductList[i].TempSqFt;
                                        }
                                        @if (User.IsInRole(GraniteHouseV2_Utility.AppConstants.AdminRole))
                                        {
                                            var isoCurrency = new System.Globalization.RegionInfo(new System.Globalization.CultureInfo("en-US").LCID).ISOCurrencySymbol;
                                            <li class="list-group-item d-flex justify-content-between bg-light">
                                                <small class="text-black">Total (@isoCurrency)</small>
                                                <strong class="text-black">$@orderTotal</strong>
                                            </li>
                                        }
                                    </ul>
                                </div>

                                @if (User.IsInRole(GraniteHouseV2_Utility.AppConstants.AdminRole))
                                {
                                    <!-- Braintree elements -->
                                    <div class="col-12">
                                        <div class="wrapper">
                                            <div class="checkout container px-0">
                                                <div id="dropin-container"></div>
                                                <input type="hidden" id="nonce" name="payment_method_nonce" />
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col-12 col-md-5 offset-md-7">
                            @if (User.IsInRole(GraniteHouseV2_Utility.AppConstants.AdminRole))
                            {
                                <button type="submit" class="btn btn-success form-control" onclick="validateOrderInput();">Submit Order</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-primary form-control" onclick="validateOrderInput();">Submit Inquiry</button>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script src="https://js.braintreegateway.com/web/dropin/1.32.1/js/dropin.min.js"></script>

    <script>
        // Setup braintree
        const CLIENT_TOKEN_FROM_SERVER = "@ViewBag.ClientToken";
        const form = document.getElementById('payment-form');

        // Step two: create a dropin instance using that container (or a string
        //  that functions as a query selector such as `#dropin-container`)
        braintree.dropin.create({
            container: document.getElementById('dropin-container'),
            // ...plus remaining configuration
            authorization: CLIENT_TOKEN_FROM_SERVER
        }, (error, dropinInstance) => {
            // Use `dropinInstance` here
            // Methods documented at https://braintree.github.io/braintree-web-drop-in/docs/current/Dropin.html

            if (error) console.error(error);

            form.addEventListener('submit', event => {
                event.preventDefault();

                dropinInstance.requestPaymentMethod((error, payload) => {
                    if (error) console.error(error);

                    // Step four: when the user is ready to complete their
                    //   transaction, use the dropinInstance to get a payment
                    //   method nonce for the user's selected payment method, then add
                    //   it a the hidden field before submitting the complete form to
                    //   a server-side integration
                    document.getElementById('nonce').value = payload.nonce;
                    form.submit();
                });
            });
        });

        function validateOrderInput() {
            event.preventDefault();
            const form = $('#payment-form');
            if (form.valid()) {
                form.submit();
            }
            else {
                var validationErrors = form.validate();
                var validationErrorsList = validationErrors.errorList;
                if (validationErrorsList.length > 0) {
                    switch (validationErrors.errorList[0].element.id) {
                        case "ApplicationUser_FullName":
                            Swal.fire({
                                icon: 'error',
                                title: 'Required information',
                                text: 'Please enter a full name!'
                            });
                            break;
                        case "ApplicationUser_Email":
                            Swal.fire({
                                icon: 'error',
                                title: 'Required information',
                                text: 'Please enter a valid email address!'
                            });
                            break;
                        case "ApplicationUser_PhoneNumber":
                            Swal.fire({
                                icon: 'error',
                                title: 'Required information',
                                text: 'Please enter a phone number!'
                            });
                            break;
                        default:
                            Swal.fire({
                                icon: 'error',
                                title: 'Oh no!',
                                text: 'There\'s some error with the form. Please check all fields and try again!'
                            });
                            break;
                    };
                    return false;
                }
            }
        }
    </script>

}
